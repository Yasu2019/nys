services:
  nodered:
    build:
      context: .
      dockerfile: Dockerfile.nodered
    volumes:
      - shared_data:/myapp/db/record
    ports:
      - '1880:1880'
    command: ["node-red"]
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  db:
    image: postgres:16.0
    env_file: .env
    ports:
      - '5432:5432'
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    shm_size: '2gb'  # PostgreSQLのパフォーマンス向上のため
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    tty: true
    stdin_open: true

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru

  web:
    build:
      context: .
      dockerfile: Dockerfile.production.web
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec chmod +x bin/rails && npm run build:css && bundle exec bin/rails s -p 3000 -b '0.0.0.0'"
    tty: true
    stdin_open: true
    env_file: .env
    environment:
      - KEY_DERIVATION_SALT=${KEY_DERIVATION_SALT}
      - RAILS_ENV=production
      - RACK_ENV=production
      - RAILS_SERVE_STATIC_FILES=1
      - RAILS_MAX_THREADS=5
      - WEB_CONCURRENCY=2
      - MALLOC_ARENA_MAX=2
    volumes:
      - .:/myapp:delegated
      - shared_data:/myapp/db/record
      - /myapp/node_modules
      - tmp-data:/myapp/tmp  # 一時ファイル用のボリューム
    tmpfs:
      - /myapp/tmp/pids
      - /myapp/tmp/cache
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
  
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.production.web
    command: bundle exec sidekiq
    volumes:
      - .:/myapp
      - shared_data:/myapp/db/record
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      - RAILS_ENV=production
      - RACK_ENV=production
      - MALLOC_ARENA_MAX=2
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  shared_data:
  postgresql-data:
    driver: local
  tmp-data:  # 一時ファイル用のボリューム
    driver: local